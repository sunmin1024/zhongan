2020-03-17 15:20:50,905 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:20:51,035 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:20:51,137 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:20:51,394 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:20:51,490 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:20:51,592 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:20:51,822 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:20:52,305 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:20:52,483 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:20:52,671 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:20:52,748 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:20:53,017 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:20:53,094 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:20:53,217 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:20:53,292 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:20:53,403 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:20:53,480 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:20:53,590 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:20:54,088 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:20:54,203 - [test_testcase.py-->line:105] - ERROR: 用例：用例名已存在，执行未通过
2020-03-17 15:20:54,203 - [test_testcase.py-->line:106] - ERROR: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 10, 'name': '百度新闻548072--百度新闻548072_测试接口--成功', 'interface': {'name': '百度新闻548072_测试接口', 'project': '百度新闻548072'}, 'author': 'zhang'}
Traceback (most recent call last):
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 102, in test_testcase
    self.assert_dict_item(expected, res)
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 121, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 10, 'name': '百度新闻548072--百度新闻548072_测试接口--成功', 'interface': {'name': '百度新闻548072_测试接口', 'project': '百度新闻548072'}, 'author': 'zhang'}
2020-03-17 15:23:51,958 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:23:52,103 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:23:52,218 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:23:52,509 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:23:52,621 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:23:52,734 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:23:52,948 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:23:53,410 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:23:53,586 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:23:53,762 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:23:53,823 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:23:54,101 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:23:54,163 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:23:54,264 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:23:54,325 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:23:54,429 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:23:54,490 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:23:54,590 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:23:55,068 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:23:55,190 - [test_testcase.py-->line:105] - ERROR: 用例：用例名已存在，执行未通过
2020-03-17 15:23:55,190 - [test_testcase.py-->line:106] - ERROR: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 11, 'name': '新闻APP472220_测试接口--成功', 'interface': {'name': '新闻APP472220_测试接口', 'project': '新闻APP472220'}, 'author': 'zhang'}
Traceback (most recent call last):
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 102, in test_testcase
    self.assert_dict_item(expected, res)
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 121, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 11, 'name': '新闻APP472220_测试接口--成功', 'interface': {'name': '新闻APP472220_测试接口', 'project': '新闻APP472220'}, 'author': 'zhang'}
2020-03-17 15:25:32,190 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:25:32,310 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:25:32,415 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:25:32,709 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:25:32,808 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:25:32,907 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:25:33,171 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:25:33,615 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:25:33,782 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:25:33,946 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:25:34,022 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:25:34,295 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:25:34,370 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:25:34,477 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:25:34,552 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:25:34,659 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:25:34,735 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:25:34,843 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:25:35,317 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:25:35,434 - [test_testcase.py-->line:105] - ERROR: 用例：用例名已存在，执行未通过
2020-03-17 15:25:35,434 - [test_testcase.py-->line:106] - ERROR: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 12, 'name': '前程贷707683_测试接口--成功', 'interface': {'name': '前程贷707683_测试接口', 'project': '前程贷707683'}, 'author': 'zhang'}
Traceback (most recent call last):
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 102, in test_testcase
    self.assert_dict_item(expected, res)
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 121, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 12, 'name': '前程贷707683_测试接口--成功', 'interface': {'name': '前程贷707683_测试接口', 'project': '前程贷707683'}, 'author': 'zhang'}
2020-03-17 15:27:04,614 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:27:04,729 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:27:04,838 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:27:05,096 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:27:05,195 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:27:05,295 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:27:05,519 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:27:05,987 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:27:06,152 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:27:06,316 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:27:06,380 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:27:06,651 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:27:06,716 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:27:06,834 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:27:06,897 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:27:06,995 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:27:07,058 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:27:07,159 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:27:07,645 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:27:07,757 - [test_testcase.py-->line:105] - ERROR: 用例：用例名已存在，执行未通过
2020-03-17 15:27:07,757 - [test_testcase.py-->line:106] - ERROR: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 13, 'name': '开心贷417776_测试接口--成功', 'interface': {'name': '开心贷417776_测试接口', 'project': '开心贷417776'}, 'author': 'zhang'}
Traceback (most recent call last):
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 102, in test_testcase
    self.assert_dict_item(expected, res)
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 121, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 13, 'name': '开心贷417776_测试接口--成功', 'interface': {'name': '开心贷417776_测试接口', 'project': '开心贷417776'}, 'author': 'zhang'}
2020-03-17 15:28:05,794 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:28:05,920 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:28:06,032 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:28:06,313 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:28:06,442 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:28:06,604 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:28:06,839 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:28:07,254 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:28:07,416 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:28:07,589 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:28:07,664 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:28:07,934 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:28:08,009 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:28:08,126 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:28:08,202 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:28:08,302 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:28:08,376 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:28:08,487 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:28:08,965 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:28:09,095 - [test_testcase.py-->line:105] - ERROR: 用例：用例名已存在，执行未通过
2020-03-17 15:28:09,095 - [test_testcase.py-->line:106] - ERROR: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 14, 'name': '新闻APP565436_测试接口--成功', 'interface': {'name': '新闻APP565436_测试接口', 'project': '新闻APP565436'}, 'author': 'zhang'}
Traceback (most recent call last):
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 102, in test_testcase
    self.assert_dict_item(expected, res)
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 121, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 14, 'name': '新闻APP565436_测试接口--成功', 'interface': {'name': '新闻APP565436_测试接口', 'project': '新闻APP565436'}, 'author': 'zhang'}
2020-03-17 15:29:09,005 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:29:09,121 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:29:09,250 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:29:09,499 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:29:09,594 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:29:09,688 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:29:09,916 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:29:10,372 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:29:10,542 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:29:10,714 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:29:10,779 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:11,029 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:29:11,095 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:11,209 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:29:11,273 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:11,370 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:29:11,434 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:11,538 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:29:12,026 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:29:12,144 - [test_testcase.py-->line:105] - ERROR: 用例：用例名已存在，执行未通过
2020-03-17 15:29:12,144 - [test_testcase.py-->line:106] - ERROR: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 15, 'name': '开心贷474864_测试接口--成功', 'interface': {'name': '开心贷474864_测试接口', 'project': '开心贷474864'}, 'author': 'zhang'}
Traceback (most recent call last):
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 102, in test_testcase
    self.assert_dict_item(expected, res)
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 121, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 15, 'name': '开心贷474864_测试接口--成功', 'interface': {'name': '开心贷474864_测试接口', 'project': '开心贷474864'}, 'author': 'zhang'}
2020-03-17 15:29:39,023 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:29:39,137 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:29:39,238 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:29:39,507 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:29:39,611 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:29:39,709 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:29:39,927 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:29:40,386 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:29:40,562 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:29:40,756 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:29:40,831 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:41,097 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:29:41,171 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:41,268 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:29:41,343 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:41,441 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:29:41,516 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:29:41,615 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:29:42,072 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:29:42,184 - [test_testcase.py-->line:105] - ERROR: 用例：用例名已存在，执行未通过
2020-03-17 15:29:42,184 - [test_testcase.py-->line:106] - ERROR: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 16, 'name': '秋秋240289_测试接口--成功', 'interface': {'name': '秋秋240289_测试接口', 'project': '秋秋240289'}, 'author': 'zhang'}
Traceback (most recent call last):
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 102, in test_testcase
    self.assert_dict_item(expected, res)
  File "C:\project\py26_project\api_test_project02\testcases\test_testcase.py", line 121, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'name': ['具有 用例名称 的 用例信息 已存在。']} items not in {'id': 16, 'name': '秋秋240289_测试接口--成功', 'interface': {'name': '秋秋240289_测试接口', 'project': '秋秋240289'}, 'author': 'zhang'}
2020-03-17 15:30:16,890 - [test_interface.py-->line:95] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:30:17,019 - [test_interface.py-->line:95] - INFO: 用例：不填接口名，执行未通过
2020-03-17 15:30:17,126 - [test_interface.py-->line:95] - INFO: 用例：接口名已存在，执行未通过
2020-03-17 15:30:17,371 - [test_login.py-->line:53] - INFO: 用例：登录成功，执行未通过
2020-03-17 15:30:17,463 - [test_login.py-->line:53] - INFO: 用例：账号为空，执行未通过
2020-03-17 15:30:17,568 - [test_login.py-->line:53] - INFO: 用例：密码为空，执行未通过
2020-03-17 15:30:17,825 - [test_login.py-->line:53] - INFO: 用例：账号未注册，执行未通过
2020-03-17 15:30:18,268 - [test_projects.py-->line:83] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:30:18,435 - [test_projects.py-->line:83] - INFO: 用例：不填项目名，执行未通过
2020-03-17 15:30:18,599 - [test_projects.py-->line:83] - INFO: 用例：项目名已存在，执行未通过
2020-03-17 15:30:18,675 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:30:18,923 - [test_register.py-->line:59] - INFO: 用例：注册成功，执行未通过
2020-03-17 15:30:18,998 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:30:19,094 - [test_register.py-->line:59] - INFO: 用例：不输入用户名，执行未通过
2020-03-17 15:30:19,167 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:30:19,264 - [test_register.py-->line:59] - INFO: 用例：不输入邮箱，执行未通过
2020-03-17 15:30:19,337 - [test_register.py-->line:81] - INFO: 0
2020-03-17 15:30:19,458 - [test_register.py-->line:59] - INFO: 用例：两次密码不一致，执行未通过
2020-03-17 15:30:19,954 - [test_testcase.py-->line:110] - INFO: 用例：添加成功，执行未通过
2020-03-17 15:30:20,057 - [test_testcase.py-->line:110] - INFO: 用例：不填用例名，执行未通过
2020-03-17 15:30:20,172 - [test_testcase.py-->line:110] - INFO: 用例：用例名已存在，执行未通过
2022-08-12 14:48:23,614 - [test_category.py-->line:39] - ERROR: 用例：新增类目成功，执行未通过
2022-08-12 14:48:23,615 - [test_category.py-->line:40] - ERROR: '{"code":200,"message":"新增一级类目成功！"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 35, in test_add_category
    self.assertIn(expected, res)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 1179, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '{"code":200,"message":"新增一级类目成功！"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 14:49:16,153 - [test_category.py-->line:39] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 14:49:16,153 - [test_category.py-->line:40] - ERROR: '{"code":400,"message":"类目名称不能为空"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 35, in test_add_category
    self.assertIn(expected, res)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 1179, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '{"code":400,"message":"类目名称不能为空"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 14:50:33,643 - [test_category.py-->line:39] - ERROR: 用例：类目名称为包含中文，执行未通过
2022-08-12 14:50:33,643 - [test_category.py-->line:40] - ERROR: '{"code":200,"message":"新增一级类目成功！"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 35, in test_add_category
    self.assertIn(expected, res)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 1179, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '{"code":200,"message":"新增一级类目成功！"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 14:50:44,760 - [test_category.py-->line:39] - ERROR: 用例：类目名称包含特殊字符，执行未通过
2022-08-12 14:50:44,761 - [test_category.py-->line:40] - ERROR: '{"code":200,"message":"新增一级类目成功！"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 35, in test_add_category
    self.assertIn(expected, res)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 1179, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '{"code":200,"message":"新增一级类目成功！"}' not found in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:18:16,219 - [test_category.py-->line:46] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:18:41,294 - [test_category.py-->line:41] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:18:41,294 - [test_category.py-->line:42] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:18:54,955 - [test_category.py-->line:46] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:18:57,061 - [test_category.py-->line:46] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:22:28,640 - [test_category.py-->line:46] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:22:30,858 - [test_category.py-->line:41] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:22:30,858 - [test_category.py-->line:42] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:22:38,964 - [test_category.py-->line:46] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:22:47,161 - [test_category.py-->line:46] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:25:09,881 - [test_category.py-->line:46] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:25:11,171 - [test_category.py-->line:41] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:25:11,171 - [test_category.py-->line:42] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:25:11,815 - [test_category.py-->line:46] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:25:12,404 - [test_category.py-->line:46] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:30:01,991 - [test_category.py-->line:46] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:30:36,804 - [test_category.py-->line:41] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:30:36,805 - [test_category.py-->line:42] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:30:43,672 - [test_category.py-->line:46] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:31:08,531 - [test_category.py-->line:46] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:31:36,555 - [test_category.py-->line:46] - INFO: 用例：类目名称重复，执行通过
2022-08-12 15:34:32,425 - [test_category.py-->line:46] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:35:01,112 - [test_category.py-->line:41] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:35:01,113 - [test_category.py-->line:42] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:35:02,019 - [test_category.py-->line:46] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:35:12,503 - [test_category.py-->line:46] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:35:27,506 - [test_category.py-->line:46] - INFO: 用例：类目名称过长，执行通过
2022-08-12 15:35:47,664 - [test_category.py-->line:46] - INFO: 用例：类目名称重复，执行通过
2022-08-12 15:38:15,382 - [test_category.py-->line:47] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:38:26,300 - [test_category.py-->line:42] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:38:26,300 - [test_category.py-->line:43] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 38, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:38:31,793 - [test_category.py-->line:47] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:38:56,720 - [test_category.py-->line:47] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:39:09,042 - [test_category.py-->line:47] - INFO: 用例：类目名称过长，执行通过
2022-08-12 15:39:40,259 - [test_category.py-->line:47] - INFO: 用例：类目名称重复，执行通过
2022-08-12 15:43:22,368 - [test_category.py-->line:47] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:43:23,803 - [test_category.py-->line:42] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:43:23,803 - [test_category.py-->line:43] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:43:24,218 - [test_category.py-->line:47] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:43:24,539 - [test_category.py-->line:47] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:43:25,727 - [test_category.py-->line:47] - INFO: 用例：类目名称过长，执行通过
2022-08-12 15:43:27,280 - [test_category.py-->line:47] - INFO: 用例：类目名称重复，执行通过
2022-08-12 15:45:49,145 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-12 15:46:26,082 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 15:46:26,083 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 15:46:26,567 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 15:46:35,701 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 15:46:37,089 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-12 15:46:37,422 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-12 16:08:54,171 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-12 16:09:15,850 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 16:09:15,851 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 16:09:30,094 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 16:10:07,866 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 16:11:11,417 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-12 16:11:58,042 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-12 16:15:30,419 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-12 16:15:57,756 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-12 16:15:57,757 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-12 16:15:59,951 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-12 16:16:02,387 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-12 16:16:03,090 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-12 16:16:14,281 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 08:54:59,277 - [test_category.py-->line:49] - INFO: 用例：新增类目成功，执行通过
2022-08-15 08:54:59,657 - [test_category.py-->line:44] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 08:54:59,657 - [test_category.py-->line:45] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 38, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 08:54:59,858 - [test_category.py-->line:49] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 08:55:00,036 - [test_category.py-->line:49] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 08:55:00,409 - [test_category.py-->line:49] - INFO: 用例：类目名称过长，执行通过
2022-08-15 08:55:02,156 - [test_category.py-->line:49] - INFO: 用例：类目名称重复，执行通过
2022-08-15 08:59:12,985 - [test_category.py-->line:49] - INFO: 用例：新增类目成功，执行通过
2022-08-15 08:59:13,069 - [test_category.py-->line:44] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 08:59:13,070 - [test_category.py-->line:45] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 38, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 08:59:13,200 - [test_category.py-->line:49] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 08:59:13,576 - [test_category.py-->line:49] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 08:59:14,079 - [test_category.py-->line:49] - INFO: 用例：类目名称过长，执行通过
2022-08-15 08:59:14,174 - [test_category.py-->line:49] - INFO: 用例：类目名称重复，执行通过
2022-08-15 10:06:33,225 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 10:06:33,323 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 10:06:33,323 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 10:06:33,441 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 10:06:33,511 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 10:06:33,578 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 10:06:33,642 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 10:19:51,485 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 10:19:51,559 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 10:19:51,559 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 10:19:51,668 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 10:19:51,738 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 10:19:51,806 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 10:19:51,877 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 10:37:47,265 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 10:37:47,343 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 10:37:47,343 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 10:37:47,463 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 10:37:47,546 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 10:37:47,624 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 10:37:47,697 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 10:39:02,834 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 10:39:02,917 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 10:39:02,917 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 10:39:03,061 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 10:39:03,162 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 10:39:03,347 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 10:39:03,433 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 10:42:56,788 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 10:42:56,861 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 10:42:56,861 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 10:42:56,969 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 10:42:57,038 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 10:42:57,121 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 10:42:57,215 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 10:52:03,629 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 10:52:03,710 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 10:52:03,710 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 10:52:03,827 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 10:52:03,898 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 10:52:03,970 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 10:52:04,043 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:07:29,338 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:07:29,495 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:07:29,495 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:07:29,601 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:07:29,690 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:07:29,792 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:07:29,901 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:20:53,489 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:20:53,561 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:20:53,561 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:20:53,666 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:20:53,732 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:20:53,807 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:20:53,873 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:22:53,303 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:22:53,392 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:22:53,392 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:22:53,506 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:22:53,573 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:22:53,648 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:22:53,717 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:26:39,742 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:26:39,816 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:26:39,816 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:26:39,927 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:26:40,005 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:26:40,069 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:26:40,142 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:30:35,576 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:30:35,649 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:30:35,649 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:30:35,768 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:30:35,842 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:30:35,913 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:30:35,981 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:32:09,606 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:32:09,694 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:32:09,694 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:32:09,817 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:32:09,911 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:32:10,013 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:32:10,106 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:34:41,008 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:34:41,096 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:34:41,096 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:34:41,329 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:34:41,412 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:34:41,498 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:34:41,587 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:39:54,917 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:39:54,992 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:39:54,992 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:39:55,144 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:39:55,231 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:39:55,305 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:39:55,373 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:43:17,213 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:43:17,289 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:43:17,289 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:43:17,400 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:43:17,480 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:43:17,549 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:43:17,626 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:47:13,908 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:47:14,006 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:47:14,006 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:47:14,141 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:47:14,229 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:47:14,312 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:47:14,384 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 11:58:26,794 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 11:58:26,874 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 11:58:26,874 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 11:58:26,990 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 11:58:27,099 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 11:58:27,173 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 11:58:27,244 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 12:00:37,383 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 12:00:37,468 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 12:00:37,468 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 12:00:37,595 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 12:00:37,687 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 12:00:37,793 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 12:00:37,955 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 12:05:44,251 - [test_category.py-->line:48] - INFO: 用例：新增类目成功，执行通过
2022-08-15 12:05:44,343 - [test_category.py-->line:43] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 12:05:44,343 - [test_category.py-->line:44] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 37, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 12:05:44,485 - [test_category.py-->line:48] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 12:05:44,586 - [test_category.py-->line:48] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 12:05:44,687 - [test_category.py-->line:48] - INFO: 用例：类目名称过长，执行通过
2022-08-15 12:05:44,802 - [test_category.py-->line:48] - INFO: 用例：类目名称重复，执行通过
2022-08-15 15:40:58,419 - [test_category.py-->line:52] - INFO: 用例：新增类目成功，执行通过
2022-08-15 15:40:58,526 - [test_category.py-->line:52] - INFO: 用例：类目名称重复，执行通过
2022-08-15 15:40:58,706 - [test_category.py-->line:52] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 15:40:58,825 - [test_category.py-->line:52] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 15:40:58,953 - [test_category.py-->line:52] - INFO: 用例：类目名称过长，执行通过
2022-08-15 15:54:39,280 - [test_category.py-->line:51] - INFO: 用例：新增类目成功，执行通过
2022-08-15 15:54:39,388 - [test_category.py-->line:51] - INFO: 用例：类目名称重复，执行通过
2022-08-15 15:54:39,606 - [test_category.py-->line:51] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 15:54:39,725 - [test_category.py-->line:51] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 15:54:39,862 - [test_category.py-->line:51] - INFO: 用例：类目名称过长，执行通过
2022-08-15 15:54:57,154 - [test_category.py-->line:51] - INFO: 用例：新增类目成功，执行通过
2022-08-15 15:54:57,265 - [test_category.py-->line:51] - INFO: 用例：类目名称重复，执行通过
2022-08-15 15:54:57,451 - [test_category.py-->line:51] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 15:54:57,583 - [test_category.py-->line:51] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 15:54:57,686 - [test_category.py-->line:51] - INFO: 用例：类目名称过长，执行通过
2022-08-15 15:55:39,308 - [test_category.py-->line:51] - INFO: 用例：新增类目成功，执行通过
2022-08-15 15:55:39,406 - [test_category.py-->line:51] - INFO: 用例：类目名称重复，执行通过
2022-08-15 15:55:39,612 - [test_category.py-->line:51] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 15:55:39,744 - [test_category.py-->line:51] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 15:55:39,856 - [test_category.py-->line:51] - INFO: 用例：类目名称过长，执行通过
2022-08-15 16:00:14,095 - [test_category.py-->line:51] - INFO: 用例：新增类目成功，执行通过
2022-08-15 16:00:14,200 - [test_category.py-->line:51] - INFO: 用例：类目名称重复，执行通过
2022-08-15 16:00:14,428 - [test_category.py-->line:51] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 16:00:14,526 - [test_category.py-->line:51] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 16:00:14,624 - [test_category.py-->line:51] - INFO: 用例：类目名称过长，执行通过
2022-08-15 16:32:38,677 - [test_category.py-->line:57] - INFO: 用例：新增类目成功，执行通过
2022-08-15 16:32:38,790 - [test_category.py-->line:57] - INFO: 用例：类目名称重复，执行通过
2022-08-15 16:32:39,011 - [test_category.py-->line:57] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 16:32:39,122 - [test_category.py-->line:57] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 16:32:39,257 - [test_category.py-->line:57] - INFO: 用例：类目名称过长，执行通过
2022-08-15 16:43:15,593 - [test_category.py-->line:52] - INFO: 用例：新增类目成功，执行通过
2022-08-15 16:43:15,793 - [test_category.py-->line:52] - INFO: 用例：类目名称重复，执行通过
2022-08-15 16:43:16,110 - [test_category.py-->line:52] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 16:43:16,342 - [test_category.py-->line:52] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 16:43:16,567 - [test_category.py-->line:52] - INFO: 用例：类目名称过长，执行通过
2022-08-15 16:44:46,074 - [test_category.py-->line:52] - INFO: 用例：新增类目成功，执行通过
2022-08-15 16:44:46,192 - [test_category.py-->line:52] - INFO: 用例：类目名称重复，执行通过
2022-08-15 16:44:46,401 - [test_category.py-->line:52] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 16:44:46,509 - [test_category.py-->line:52] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 16:44:46,627 - [test_category.py-->line:52] - INFO: 用例：类目名称过长，执行通过
2022-08-15 17:10:43,988 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-15 17:10:44,166 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-15 17:10:44,416 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 17:10:44,546 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 17:10:44,690 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-15 17:11:38,590 - [test_category.py-->line:52] - INFO: 用例：新增类目成功，执行通过
2022-08-15 17:11:38,736 - [test_category.py-->line:52] - INFO: 用例：类目名称重复，执行通过
2022-08-15 17:11:38,963 - [test_category.py-->line:52] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 17:11:39,247 - [test_category.py-->line:52] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 17:11:39,364 - [test_category.py-->line:52] - INFO: 用例：类目名称过长，执行通过
2022-08-15 17:18:12,598 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-15 17:18:12,681 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-15 17:18:12,752 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 17:18:12,752 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 17:18:12,855 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 17:18:12,927 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 17:18:13,006 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-15 17:37:45,022 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-15 17:37:45,100 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-15 17:37:45,175 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-15 17:37:45,175 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-15 17:37:45,283 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-15 17:37:45,361 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-15 17:37:45,444 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 08:50:25,893 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-16 08:50:25,968 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-16 08:50:26,041 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 08:50:26,041 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 08:50:26,154 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 08:50:26,242 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 08:50:26,344 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 08:51:40,966 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-16 08:51:41,040 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-16 08:51:41,109 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 08:51:41,109 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 08:51:41,219 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 08:51:41,295 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 08:51:41,376 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 09:04:26,353 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-16 09:04:26,431 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-16 09:04:26,508 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 09:04:26,508 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 09:04:26,627 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 09:04:26,709 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 09:04:26,785 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 09:05:27,466 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-16 09:05:27,533 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-16 09:05:27,615 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 09:05:27,615 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 09:05:27,713 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 09:05:27,781 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 09:05:27,844 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 10:40:50,023 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-16 10:40:50,105 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-16 10:40:50,191 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 10:40:50,192 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 10:40:50,301 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 10:40:50,365 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 10:40:50,437 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 10:41:58,011 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-16 10:41:58,086 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-16 10:41:58,155 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 10:41:58,155 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 10:41:58,274 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 10:41:58,384 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 10:41:58,462 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 10:43:33,363 - [test_category.py-->line:54] - INFO: 用例：新增类目成功，执行通过
2022-08-16 10:43:33,456 - [test_category.py-->line:54] - INFO: 用例：类目名称重复，执行通过
2022-08-16 10:43:33,554 - [test_category.py-->line:49] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 10:43:33,554 - [test_category.py-->line:50] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/OperationManagementPlatform  /inventory_center/testcases/test_category.py", line 43, in test_add_category
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 10:43:33,686 - [test_category.py-->line:54] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 10:43:33,776 - [test_category.py-->line:54] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 10:43:33,848 - [test_category.py-->line:54] - INFO: 用例：类目名称过长，执行通过
2022-08-16 13:49:03,077 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 13:49:03,152 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 13:49:03,220 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 13:49:03,220 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 13:49:03,324 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 13:49:03,395 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 13:49:03,464 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 16:26:35,767 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 16:26:35,843 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 16:26:35,926 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 16:26:35,926 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 16:26:36,112 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 16:26:36,202 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 16:26:36,421 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 16:27:03,077 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 16:27:03,142 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 16:27:03,204 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 16:27:03,204 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 16:27:03,322 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 16:27:03,391 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 16:27:03,459 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 17:14:39,229 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 17:14:39,304 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 17:14:39,362 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 17:14:39,362 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 17:14:39,458 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 17:14:39,513 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 17:14:39,570 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 17:34:56,702 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 17:34:56,776 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 17:34:56,847 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 17:34:56,847 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 17:34:56,949 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 17:34:57,026 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 17:34:57,097 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 17:37:28,339 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 17:37:28,410 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 17:37:28,479 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 17:37:28,479 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 17:37:28,586 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 17:37:28,655 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 17:37:28,718 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 17:39:29,575 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 17:39:29,644 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 17:39:29,720 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 17:39:29,721 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 17:39:29,836 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 17:39:29,906 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 17:39:29,974 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 17:40:44,963 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 17:40:45,049 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 17:40:45,119 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 17:40:45,119 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 17:40:45,225 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 17:40:45,305 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 17:40:45,379 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 17:45:45,058 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 17:45:45,136 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 17:45:45,221 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 17:45:45,221 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 17:45:45,329 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 17:45:45,403 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 17:45:45,472 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-16 17:47:45,363 - [test_category.py-->line:53] - INFO: 用例：新增类目成功，执行通过
2022-08-16 17:47:45,433 - [test_category.py-->line:53] - INFO: 用例：类目名称重复，执行通过
2022-08-16 17:47:45,507 - [test_category.py-->line:48] - ERROR: 用例：类目名称为空，执行未通过
2022-08-16 17:47:45,508 - [test_category.py-->line:49] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 42, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-16 17:47:45,624 - [test_category.py-->line:53] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-16 17:47:45,701 - [test_category.py-->line:53] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-16 17:47:45,773 - [test_category.py-->line:53] - INFO: 用例：类目名称过长，执行通过
2022-08-17 09:46:41,705 - [test_category.py-->line:66] - INFO: 用例：新增类目成功，执行通过
2022-08-17 09:46:41,805 - [test_category.py-->line:66] - INFO: 用例：类目名称重复，执行通过
2022-08-17 09:46:41,903 - [test_category.py-->line:60] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 09:46:41,903 - [test_category.py-->line:61] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 53, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 09:46:42,052 - [test_category.py-->line:66] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 09:46:42,136 - [test_category.py-->line:66] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 09:46:42,219 - [test_category.py-->line:66] - INFO: 用例：类目名称过长，执行通过
2022-08-17 10:16:28,273 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 10:16:28,376 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 10:16:28,376 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 10:16:28,507 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 10:16:28,664 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 10:16:28,817 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 10:17:18,103 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 10:17:18,186 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 10:17:18,186 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 10:17:18,272 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 10:17:18,358 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 10:17:18,434 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 12:44:33,139 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 12:44:33,220 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 12:44:33,220 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 12:44:33,297 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 12:44:33,372 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 12:44:33,446 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 12:45:40,525 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 12:45:40,611 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 12:45:40,611 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 12:45:40,769 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 12:45:40,995 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 12:45:41,102 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 12:46:21,876 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 12:46:21,985 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 12:46:21,985 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 12:46:22,076 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 12:46:22,186 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 12:46:22,264 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 12:47:18,968 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-17 12:47:19,042 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 12:47:19,110 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 12:47:19,110 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 12:47:19,215 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 12:47:19,284 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 12:47:19,355 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 12:54:19,729 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 12:54:19,818 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 12:54:19,818 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 12:54:19,927 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 12:54:20,001 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 12:54:20,081 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 15:26:40,916 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 15:26:40,986 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 15:26:40,986 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 15:26:41,053 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 15:26:41,125 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 15:26:41,203 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 15:27:32,388 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-17 15:27:32,460 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 15:27:32,534 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 15:27:32,534 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 15:27:32,640 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 15:27:32,708 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 15:27:32,811 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 16:43:15,815 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-17 16:43:15,901 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 16:43:15,990 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 16:43:15,990 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 16:43:16,113 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 16:43:16,202 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 16:43:16,269 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 17:01:44,590 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-17 17:01:44,671 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 17:01:44,752 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 17:01:44,752 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 17:01:44,860 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 17:01:44,940 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 17:01:45,018 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-17 17:33:57,999 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-17 17:33:58,071 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-17 17:33:58,071 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-17 17:33:58,142 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-17 17:33:58,277 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-17 17:33:58,344 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-18 15:16:30,486 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-18 15:16:30,566 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-18 15:16:30,567 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-18 15:16:30,659 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-18 15:16:30,736 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-18 15:16:30,812 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-18 15:17:48,119 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-18 15:17:48,373 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-18 15:17:48,504 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-18 15:17:48,504 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-18 15:17:49,235 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-18 15:17:49,852 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-18 15:17:50,281 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-18 15:19:36,616 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-18 15:19:36,692 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-18 15:19:36,767 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-18 15:19:36,767 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-18 15:19:36,879 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-18 15:19:36,952 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-18 15:19:37,023 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 13:28:46,962 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-19 13:28:47,050 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-19 13:28:47,134 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:28:47,134 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:28:47,243 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:28:47,243 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:28:47,318 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:28:47,318 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:28:47,386 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 13:28:47,464 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 13:28:47,544 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 13:30:48,262 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-19 13:30:48,355 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-19 13:30:48,742 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:30:48,742 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:30:49,055 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:30:49,055 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:30:49,240 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:30:49,240 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:30:49,406 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 13:30:49,490 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 13:30:49,563 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 13:31:44,001 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-19 13:31:44,085 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-19 13:31:44,150 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:31:44,150 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:31:44,255 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:31:44,255 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:31:44,326 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 13:31:44,326 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 13:31:44,392 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 13:31:44,460 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 13:31:44,538 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 14:15:39,533 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-19 14:15:39,622 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-19 14:15:39,725 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:15:39,726 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:15:39,936 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:15:39,936 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:15:40,220 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:15:40,220 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:15:40,541 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 14:15:40,775 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 14:15:40,850 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 14:16:34,624 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-19 14:16:34,746 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-19 14:16:34,856 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:16:34,856 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:16:35,061 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:16:35,061 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:16:35,177 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:16:35,177 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:16:35,297 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 14:16:35,402 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 14:16:35,511 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 14:16:41,838 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-19 14:16:41,907 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-19 14:16:41,973 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:16:41,973 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:16:42,085 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:16:42,085 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:16:42,155 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:16:42,155 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:16:42,229 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 14:16:42,297 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 14:16:42,368 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 14:20:10,605 - [test_category.py-->line:65] - INFO: 用例：新增类目成功，执行通过
2022-08-19 14:20:10,675 - [test_category.py-->line:65] - INFO: 用例：类目名称重复，执行通过
2022-08-19 14:20:10,742 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:20:10,742 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:20:10,845 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:20:10,845 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:20:10,920 - [test_category.py-->line:59] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:20:10,920 - [test_category.py-->line:60] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 52, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:20:10,992 - [test_category.py-->line:65] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 14:20:11,063 - [test_category.py-->line:65] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 14:20:11,127 - [test_category.py-->line:65] - INFO: 用例：类目名称过长，执行通过
2022-08-19 14:23:40,364 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-19 14:23:40,434 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-19 14:23:40,529 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:23:40,529 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:23:40,638 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:23:40,638 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:23:40,709 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:23:40,709 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:23:40,793 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 14:23:40,865 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 14:23:40,932 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-19 14:42:47,064 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-19 14:42:47,179 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-19 14:42:47,267 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:42:47,267 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:42:47,408 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:42:47,408 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:42:47,499 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 14:42:47,499 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 14:42:47,582 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 14:42:47,655 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 14:42:47,726 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-19 15:18:45,144 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-19 15:18:45,219 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-19 15:18:45,292 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 15:18:45,292 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 15:18:45,399 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 15:18:45,400 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 15:18:45,476 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 15:18:45,477 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 15:18:45,549 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 15:18:45,619 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 15:18:45,699 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-19 17:08:12,224 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-19 17:08:12,290 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-19 17:08:12,368 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 17:08:12,369 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 17:08:12,473 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 17:08:12,540 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 17:08:12,620 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-19 17:09:06,255 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-19 17:09:06,319 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-19 17:09:06,380 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 17:09:06,380 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/ManagementPlatform  /InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 17:09:06,499 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 17:09:06,579 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 17:09:06,652 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-19 18:24:57,221 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-19 18:24:57,309 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-19 18:24:57,381 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-19 18:24:57,381 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-19 18:24:57,498 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-19 18:24:57,573 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-19 18:24:57,662 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-22 10:27:07,301 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-22 10:27:07,441 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-22 10:27:07,509 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-22 10:27:07,509 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-22 10:27:07,623 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-22 10:27:07,703 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-22 10:27:07,782 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-22 10:42:24,448 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-22 10:42:24,546 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-22 10:42:24,627 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-22 10:42:24,628 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-22 10:42:24,738 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-22 10:42:24,811 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-22 10:42:24,884 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-22 10:43:05,350 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-22 10:43:05,422 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-22 10:43:05,510 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-22 10:43:05,510 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-22 10:43:05,627 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-22 10:43:05,710 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-22 10:43:05,818 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-22 11:21:35,754 - [test_category.py-->line:63] - INFO: 用例：新增类目成功，执行通过
2022-08-22 11:21:35,840 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-22 11:21:35,919 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-22 11:21:35,919 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 15, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-22 11:21:36,063 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-22 11:21:36,140 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-22 11:21:36,218 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-23 15:36:18,647 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-23 15:36:18,770 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-23 15:36:18,770 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-23 15:36:18,915 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-23 15:36:19,121 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-23 15:36:19,237 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-23 15:37:16,339 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-23 15:37:16,600 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-23 15:37:16,600 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 200, 'message': '新增一级类目成功！', 'data': None}
2022-08-23 15:37:16,715 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-23 15:37:16,863 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-23 15:37:16,991 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-23 19:07:39,653 - [test_odercome.py-->line:95] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 19:07:39,654 - [test_odercome.py-->line:96] - ERROR: assert 200 == False
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 85, in test_inventory
    assert expected_code == res_code
AssertionError: assert 200 == False
2022-08-23 19:14:15,994 - [test_odercome.py-->line:95] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 19:14:15,994 - [test_odercome.py-->line:96] - ERROR: assert 200 == False
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 85, in test_inventory
    assert expected_code == res_code
AssertionError: assert 200 == False
2022-08-23 19:23:30,827 - [test_odercome.py-->line:93] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 19:23:30,828 - [test_odercome.py-->line:94] - ERROR: assert 200 == [200]
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 83, in test_inventory
    assert expected_code == res_code
AssertionError: assert 200 == [200]
2022-08-23 19:24:03,688 - [test_odercome.py-->line:93] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 19:24:03,688 - [test_odercome.py-->line:94] - ERROR: assert 0 == None
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 85, in test_inventory
    assert expected_status == actual_status
AssertionError: assert 0 == None
2022-08-23 19:42:19,623 - [test_odercome.py-->line:95] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 19:42:19,624 - [test_odercome.py-->line:96] - ERROR: assert 0 == None
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 87, in test_inventory
    assert expected_status == lock_status
AssertionError: assert 0 == None
2022-08-23 20:23:30,192 - [test_odercome.py-->line:95] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 20:23:30,192 - [test_odercome.py-->line:96] - ERROR: assert 2 == (74 - 74)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 91, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (74 - 74)
 +  where 2 = CaseDate.goods_num
2022-08-23 20:25:54,624 - [test_odercome.py-->line:96] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 20:25:54,625 - [test_odercome.py-->line:97] - ERROR: assert 2 == 0
 +  where 2 = CaseDate.goods_num
 +  and   0 = decimal('0')
 +    where '0' = str((78 - 78))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 92, in test_inventory
    assert CaseDate.goods_num == decimal(str(end_lock_stock-pre_lock_stock))
AssertionError: assert 2 == 0
 +  where 2 = CaseDate.goods_num
 +  and   0 = decimal('0')
 +    where '0' = str((78 - 78))
2022-08-23 20:26:47,555 - [test_odercome.py-->line:96] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 20:26:47,555 - [test_odercome.py-->line:97] - ERROR: assert 2 == (80 - 80)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 92, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (80 - 80)
 +  where 2 = CaseDate.goods_num
2022-08-23 20:37:33,546 - [test_odercome.py-->line:96] - ERROR: 用例：创建订单成功，执行未通过
2022-08-23 20:37:33,547 - [test_odercome.py-->line:97] - ERROR: assert 2 == (86 - 86)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 92, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (86 - 86)
 +  where 2 = CaseDate.goods_num
2022-08-23 20:45:53,386 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-23 20:45:53,443 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-23 20:45:53,443 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 1101, 'message': '类目英文名称 不能为空', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 1101, 'message': '类目英文名称 不能为空', 'data': None}
2022-08-23 20:45:53,524 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-23 20:45:53,598 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-23 20:45:53,670 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-23 20:46:46,213 - [test_category.py-->line:63] - INFO: 用例：类目名称重复，执行通过
2022-08-23 20:46:46,273 - [test_category.py-->line:57] - ERROR: 用例：类目名称为空，执行未通过
2022-08-23 20:46:46,273 - [test_category.py-->line:58] - ERROR: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 1101, 'message': '类目英文名称 不能为空', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_category.py", line 50, in test_add_category
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/common/basefunc.py", line 16, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 400, 'message': '类目名称不能为空'} items not in {'code': 1101, 'message': '类目英文名称 不能为空', 'data': None}
2022-08-23 20:46:46,361 - [test_category.py-->line:63] - INFO: 用例：类目名称为包含中文，执行通过
2022-08-23 20:46:46,441 - [test_category.py-->line:63] - INFO: 用例：类目名称包含特殊字符，执行通过
2022-08-23 20:46:46,517 - [test_category.py-->line:63] - INFO: 用例：类目名称过长，执行通过
2022-08-23 22:05:03,309 - [test_odercome.py-->line:104] - INFO: 用例：创建订单成功，执行通过
2022-08-24 08:53:02,708 - [test_odercome.py-->line:98] - ERROR: 用例：创建订单成功，执行未通过
2022-08-24 08:53:02,708 - [test_odercome.py-->line:99] - ERROR: assert 2 == (118 - 118)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 94, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (118 - 118)
 +  where 2 = CaseDate.goods_num
2022-08-24 08:57:58,473 - [test_odercome.py-->line:98] - ERROR: 用例：创建订单成功，执行未通过
2022-08-24 08:57:58,473 - [test_odercome.py-->line:99] - ERROR: assert 2 == (120 - 120)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 94, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (120 - 120)
 +  where 2 = CaseDate.goods_num
2022-08-24 09:19:15,233 - [test_odercome.py-->line:98] - ERROR: 用例：创建订单成功，执行未通过
2022-08-24 09:19:15,233 - [test_odercome.py-->line:99] - ERROR: assert 2 == (124 - 124)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 94, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (124 - 124)
 +  where 2 = CaseDate.goods_num
2022-08-24 09:23:49,622 - [test_odercome.py-->line:98] - ERROR: 用例：创建订单成功，执行未通过
2022-08-24 09:23:49,622 - [test_odercome.py-->line:99] - ERROR: assert 2 == (126 - 126)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 94, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (126 - 126)
 +  where 2 = CaseDate.goods_num
2022-08-24 09:26:14,107 - [test_odercome.py-->line:98] - ERROR: 用例：创建订单成功，执行未通过
2022-08-24 09:26:14,107 - [test_odercome.py-->line:99] - ERROR: assert 2 == (128 - 128)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 94, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (128 - 128)
 +  where 2 = CaseDate.goods_num
2022-08-24 09:27:59,448 - [test_odercome.py-->line:98] - ERROR: 用例：创建订单成功，执行未通过
2022-08-24 09:27:59,448 - [test_odercome.py-->line:99] - ERROR: assert 2 == (132 - 132)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 94, in test_inventory
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (132 - 132)
 +  where 2 = CaseDate.goods_num
2022-08-24 13:57:32,409 - [test_odercome.py-->line:98] - ERROR: 用例：创建订单成功，执行未通过
2022-08-24 13:57:32,411 - [test_odercome.py-->line:99] - ERROR: assert 2 == (142 - 142)
 +  where 2 = CaseDate.goods_num
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 94, in test_stock
    assert CaseDate.goods_num == end_lock_stock-pre_lock_stock
AssertionError: assert 2 == (142 - 142)
 +  where 2 = CaseDate.goods_num
2022-08-24 14:06:24,907 - [test_odercome.py-->line:107] - INFO: 用例：创建订单成功，执行通过
2022-08-24 14:07:44,392 - [test_odercome.py-->line:107] - INFO: 用例：创建订单成功，执行通过
2022-08-24 14:11:01,891 - [test_odercome.py-->line:107] - INFO: 用例：创建订单成功，执行通过
2022-08-24 16:02:56,922 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:05:00,979 - [test_odercome.py-->line:99] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 16:05:00,980 - [test_odercome.py-->line:100] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((15 - 15))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 95, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((15 - 15))
2022-08-24 16:23:16,151 - [test_odercome.py-->line:99] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 16:23:16,151 - [test_odercome.py-->line:100] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((16 - 16))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 95, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((16 - 16))
2022-08-24 16:24:01,884 - [test_odercome.py-->line:99] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 16:24:01,885 - [test_odercome.py-->line:100] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((17 - 17))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 95, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((17 - 17))
2022-08-24 16:24:56,818 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:28:31,660 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:29:16,706 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:37:09,255 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:38:22,494 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:38:59,726 - [test_odercome.py-->line:100] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 16:38:59,726 - [test_odercome.py-->line:101] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((23 - 23))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 96, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((23 - 23))
2022-08-24 16:39:01,622 - [test_odercome.py-->line:100] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 16:39:01,622 - [test_odercome.py-->line:101] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((24 - 24))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 96, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((24 - 24))
2022-08-24 16:39:03,170 - [test_odercome.py-->line:100] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 16:39:03,170 - [test_odercome.py-->line:101] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((25 - 25))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 96, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((25 - 25))
2022-08-24 16:42:41,448 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:43:03,606 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 16:47:05,122 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 17:03:33,225 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 17:41:52,641 - [test_odercome.py-->line:106] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 17:50:23,297 - [test_odercome.py-->line:100] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 17:50:23,298 - [test_odercome.py-->line:101] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((32 - 32))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 96, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((32 - 32))
2022-08-24 18:16:51,321 - [test_odercome.py-->line:100] - ERROR: 用例：创建订单成功,锁定库存，执行未通过
2022-08-24 18:16:51,321 - [test_odercome.py-->line:101] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((33 - 33))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_odercome.py", line 96, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((33 - 33))
2022-08-24 18:17:59,223 - [test_odercome.py-->line:107] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-24 18:20:31,660 - [test_odercome.py-->line:107] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-25 10:29:30,288 - [test_odercome.py-->line:107] - INFO: 用例：创建订单成功,锁定库存，执行通过
2022-08-25 13:55:29,606 - [test_odercome.py-->line:107] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-25 14:22:49,409 - [test_odercome.py-->line:107] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-25 22:25:15,882 - [test_odercome2.py-->line:138] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-25 22:26:20,247 - [test_odercome.py-->line:106] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-25 22:26:23,590 - [test_odercome2.py-->line:138] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 09:36:10,527 - [test_ordercome.py-->line:102] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-26 09:36:10,527 - [test_ordercome.py-->line:103] - ERROR: assert Decimal('1') == Decimal('41')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('41') = Decimal((50 - 9))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_ordercome.py", line 98, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('41')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('41') = Decimal((50 - 9))
2022-08-26 09:37:54,554 - [test_ordercome.py-->line:108] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 10:00:49,682 - [test_ordercome.py-->line:108] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 10:06:26,461 - [test_ordercome.py-->line:108] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 10:06:30,297 - [test_ordercome.py-->line:220] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:00:47,745 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:00:51,133 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:03:20,116 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:03:23,841 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:26:31,131 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:26:34,501 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:28:22,068 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:28:26,225 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:30:58,153 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:31:01,627 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:33:33,029 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:33:37,487 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:35:17,964 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:35:21,587 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:36:35,925 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:36:40,109 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 11:37:53,067 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 11:37:56,905 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-26 15:20:29,901 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-26 15:20:33,286 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-27 14:58:13,069 - [test_ordercome.py-->line:104] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-27 14:58:13,070 - [test_ordercome.py-->line:105] - ERROR: assert Decimal('1') == Decimal('67')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('67') = Decimal((76 - 9))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/InventoryCenter/testcases/test_ordercome.py", line 100, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock-pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('67')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('67') = Decimal((76 - 9))
2022-08-27 14:58:31,386 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-27 15:01:33,103 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-27 15:11:40,976 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-27 15:13:54,530 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-27 15:15:22,301 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-27 15:25:49,066 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-27 15:27:56,121 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-27 15:28:57,965 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 08:51:36,406 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 08:53:19,083 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 08:54:58,868 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 08:55:02,930 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 08:59:22,808 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 08:59:26,665 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 09:00:23,124 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 09:00:27,601 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 11:11:04,055 - [test_ordercome.py-->line:110] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 11:11:07,673 - [test_ordercome.py-->line:221] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 16:44:21,892 - [test_ordercome.py-->line:116] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 17:00:25,958 - [test_ordercome.py-->line:121] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 17:00:25,958 - [test_ordercome.py-->line:122] - ERROR: assert 1 == '1'
 +  where '1' = CaseDate.market_id
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 110, in test_stock
    assert sku_market_id == CaseDate.market_id
AssertionError: assert 1 == '1'
 +  where '1' = CaseDate.market_id
2022-08-29 17:03:41,142 - [test_ordercome.py-->line:127] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 17:06:30,812 - [test_ordercome.py-->line:127] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 18:54:29,897 - [test_ordercome.py-->line:253] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-08-29 18:54:29,897 - [test_ordercome.py-->line:254] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((48 - 48))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 248, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_lock_stock1 - pre_lock_stock1)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((48 - 48))
2022-08-29 18:59:54,284 - [test_ordercome.py-->line:264] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-08-29 18:59:54,285 - [test_ordercome.py-->line:265] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((50 - 50))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 259, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_lock_stock1 - pre_lock_stock1)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((50 - 50))
2022-08-29 19:00:40,518 - [test_ordercome.py-->line:264] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-08-29 19:00:40,519 - [test_ordercome.py-->line:265] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((51 - 51))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 259, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_lock_stock1 - pre_lock_stock1)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((51 - 51))
2022-08-29 19:03:42,136 - [test_ordercome.py-->line:265] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-08-29 19:03:42,136 - [test_ordercome.py-->line:266] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((52 - 52))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 260, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_lock_stock1 - pre_lock_stock1)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((52 - 52))
2022-08-29 19:06:05,014 - [test_ordercome.py-->line:265] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-08-29 19:06:05,014 - [test_ordercome.py-->line:266] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((53 - 53))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 260, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_lock_stock1 - pre_lock_stock1)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((53 - 53))
2022-08-29 19:09:13,687 - [test_ordercome.py-->line:266] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-08-29 19:09:13,687 - [test_ordercome.py-->line:267] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((56 - 56))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 261, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_lock_stock1 - pre_lock_stock1)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('0') = Decimal((56 - 56))
2022-08-29 19:11:14,245 - [test_ordercome.py-->line:121] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:11:14,246 - [test_ordercome.py-->line:122] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((154 - 154))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 117, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((154 - 154))
2022-08-29 19:13:37,882 - [test_ordercome.py-->line:120] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:13:37,882 - [test_ordercome.py-->line:121] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((159 - 159))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 116, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((159 - 159))
2022-08-29 19:15:12,128 - [test_ordercome.py-->line:121] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:15:12,129 - [test_ordercome.py-->line:122] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((161 - 161))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 117, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((161 - 161))
2022-08-29 19:18:56,746 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:18:56,747 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((168 - 168))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((168 - 168))
2022-08-29 19:19:37,331 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:19:37,331 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((169 - 169))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((169 - 169))
2022-08-29 19:19:51,098 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:19:51,098 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((170 - 170))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((170 - 170))
2022-08-29 19:21:31,962 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:21:31,963 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((171 - 171))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((171 - 171))
2022-08-29 19:23:16,530 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:23:16,530 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((172 - 172))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((172 - 172))
2022-08-29 19:25:25,193 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:25:25,193 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((173 - 173))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((173 - 173))
2022-08-29 19:26:43,773 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:26:43,774 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((174 - 174))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((174 - 174))
2022-08-29 19:27:30,505 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:27:30,506 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((175 - 175))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((175 - 175))
2022-08-29 19:28:09,823 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:28:09,824 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((176 - 176))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((176 - 176))
2022-08-29 19:30:15,420 - [test_ordercome.py-->line:128] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:30:41,975 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:30:41,975 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((178 - 178))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((178 - 178))
2022-08-29 19:33:15,424 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:33:15,425 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((179 - 179))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((179 - 179))
2022-08-29 19:33:40,123 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:33:40,123 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((180 - 180))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((180 - 180))
2022-08-29 19:34:49,262 - [test_ordercome.py-->line:122] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:34:49,263 - [test_ordercome.py-->line:123] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((181 - 181))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 118, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((181 - 181))
2022-08-29 19:37:50,647 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:39:29,977 - [test_ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 19:41:01,238 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:41:06,648 - [test_ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 19:41:25,930 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:41:30,882 - [test_ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 19:43:41,393 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:45:42,654 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:47:22,151 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:50:54,492 - [test_ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 19:53:02,939 - [test_ordercome.py-->line:119] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 19:53:02,939 - [test_ordercome.py-->line:120] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((210 - 210))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 115, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((210 - 210))
2022-08-29 19:53:07,746 - [test_ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 19:54:51,181 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:54:55,688 - [test_ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 19:55:35,317 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 19:59:31,188 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 20:01:30,100 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 20:01:35,572 - [test_ordercome.py-->line:269] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 20:02:28,193 - [test_ordercome.py-->line:118] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 20:02:28,194 - [test_ordercome.py-->line:119] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((226 - 226))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 114, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((226 - 226))
2022-08-29 20:03:03,204 - [test_ordercome.py-->line:118] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-08-29 20:03:03,204 - [test_ordercome.py-->line:119] - ERROR: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((228 - 228))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 114, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('0')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('0') = Decimal((228 - 228))
2022-08-29 20:04:19,789 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 20:04:26,465 - [test_ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 20:06:52,466 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 20:06:59,400 - [test_ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-29 20:07:20,580 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-29 20:07:27,043 - [test_ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-30 08:45:34,031 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 08:45:41,211 - [test_ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-30 08:47:42,545 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 08:47:49,410 - [test_ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-30 08:58:39,651 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 08:58:46,491 - [test_ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-30 14:09:29,215 - [test_ordercome.py-->line:128] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:21:38,080 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:23:09,222 - [test_ordercome.py-->line:126] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:29:25,652 - [test_ordercome.py-->line:125] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:30:14,499 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:42:28,797 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:43:23,248 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:43:29,870 - [test_ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-30 14:45:43,076 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 14:45:49,649 - [test_ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-08-30 17:15:00,852 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-08-30 17:15:08,097 - [test_ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-01 09:38:36,313 - [test_ordercome.py-->line:116] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-09-01 09:38:36,313 - [test_ordercome.py-->line:117] - ERROR: assert Decimal('1') == Decimal('268')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('268') = Decimal((268 - 0))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_ordercome.py", line 112, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('268')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('268') = Decimal((268 - 0))
2022-09-01 09:38:41,221 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-01 09:40:30,028 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-01 09:46:59,377 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-01 09:47:06,089 - [test_ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-01 13:32:59,861 - [test_ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-01 13:33:07,259 - [test_ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-02 13:51:51,397 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-02 13:51:58,055 - [test_01ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-02 18:26:01,576 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 18:26:01,922 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-02 18:57:23,150 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 18:59:57,666 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 18:59:58,081 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:07:54,932 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:07:55,280 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:14:20,469 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:14:20,856 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:17:16,502 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:17:16,881 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:18:05,421 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:18:05,786 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:21:02,614 - [test_02order_upload.py-->line:48] - ERROR: 用例：上传订单_品晟仓库，执行未通过
2022-09-02 19:21:02,615 - [test_02order_upload.py-->line:49] - ERROR: assert '{\n"ask": "Success",\n"message": "Success",\n}' in {'ask': 'Success', 'data': None, 'error': None, 'message': 'Success', ...}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_02order_upload.py", line 44, in test_sc_order
    assert case["expected"] in res
AssertionError: assert '{\n"ask": "Success",\n"message": "Success",\n}' in {'ask': 'Success', 'data': None, 'error': None, 'message': 'Success', ...}
2022-09-02 19:21:02,978 - [test_02order_upload.py-->line:48] - ERROR: 用例：取消出库单_品晟仓库，执行未通过
2022-09-02 19:21:02,978 - [test_02order_upload.py-->line:49] - ERROR: assert '{\n"ask": "Success",\n"message": "Success",\n}' in {'ask': 'Success', 'cancelStatus': 2, 'data': None, 'error': None, ...}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_02order_upload.py", line 44, in test_sc_order
    assert case["expected"] in res
AssertionError: assert '{\n"ask": "Success",\n"message": "Success",\n}' in {'ask': 'Success', 'cancelStatus': 2, 'data': None, 'error': None, ...}
2022-09-02 19:28:22,772 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:28:23,119 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:33:18,770 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:33:19,107 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:37:18,112 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:37:18,431 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:38:46,938 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:38:47,316 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-02 19:55:48,823 - [test_02order_upload.py-->line:55] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-02 19:55:49,158 - [test_02order_upload.py-->line:55] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 09:01:15,179 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-05 09:01:22,606 - [test_01ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-05 10:03:44,087 - [test_02order_upload.py-->line:61] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:25:24,888 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:26:11,515 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:27:45,766 - [test_02order_upload.py-->line:54] - ERROR: 用例：上传订单_风雷仓库，执行未通过
2022-09-05 10:27:45,767 - [test_02order_upload.py-->line:55] - ERROR: {'code': 200, 'message': 'success'} items not in {'code': 500, 'message': '仓库无响应', 'data': None}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_02order_upload.py", line 50, in test_sc_order
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/common/basefunc.py", line 20, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 200, 'message': 'success'} items not in {'code': 500, 'message': '仓库无响应', 'data': None}
2022-09-05 10:29:43,680 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:32:43,373 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:34:13,936 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:34:14,927 - [test_02order_upload.py-->line:60] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 10:36:40,877 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 10:36:41,747 - [test_02order_upload.py-->line:60] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 10:36:43,166 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:38:59,754 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 10:39:00,245 - [test_02order_upload.py-->line:60] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 10:39:01,530 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:39:02,354 - [test_02order_upload.py-->line:60] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 10:40:18,377 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 10:40:18,767 - [test_02order_upload.py-->line:60] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 10:40:19,843 - [test_02order_upload.py-->line:60] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 10:40:20,632 - [test_02order_upload.py-->line:60] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 11:11:37,032 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 11:13:06,122 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 13:34:29,115 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 13:34:30,165 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-05 13:36:37,115 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 13:36:37,655 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 13:36:38,751 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 13:36:39,668 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 13:36:43,503 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 13:36:44,380 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-05 13:40:18,161 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-05 13:40:25,158 - [test_01ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-05 13:40:25,818 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 13:40:26,203 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 13:40:27,026 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 13:40:27,710 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 13:40:31,992 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 13:40:32,740 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-05 13:41:54,083 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-05 13:42:01,092 - [test_01ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-05 13:42:01,776 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 13:42:02,425 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 13:42:03,065 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 13:42:03,851 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 13:42:08,279 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 13:42:09,068 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-05 17:42:44,099 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 17:42:45,179 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 17:42:47,076 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 17:42:48,365 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 17:42:52,805 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 17:42:54,132 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-05 17:47:27,849 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 17:47:28,408 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 17:47:29,616 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 17:47:31,351 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 17:47:35,842 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 17:47:36,939 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-05 17:52:37,991 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 17:52:38,514 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 17:52:39,707 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 17:52:40,666 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 17:52:44,838 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 17:52:45,683 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-05 18:33:38,214 - [test_01ordercome.py-->line:116] - ERROR: 用例：创建单个商品订单成功锁定库存，执行未通过
2022-09-05 18:33:38,217 - [test_01ordercome.py-->line:117] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('2') = Decimal((289 - 287))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 112, in test_stock
    assert Decimal(CaseDate.goods_num) == Decimal(end_lock_stock - pre_lock_stock)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num
 +  and   Decimal('2') = Decimal((289 - 287))
2022-09-05 18:33:43,213 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-05 18:33:49,735 - [test_01ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-05 18:33:50,462 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-05 18:33:51,022 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-05 18:33:52,129 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-05 18:33:53,318 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-05 18:33:57,668 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-05 18:33:58,653 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-06 08:47:28,699 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-06 08:47:47,864 - [test_01ordercome.py-->line:267] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 08:48:01,229 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-06 08:48:02,393 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-06 08:48:05,822 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-06 08:48:11,671 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-06 08:48:16,317 - [test_02order_upload.py-->line:65] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-06 08:48:17,443 - [test_02order_upload.py-->line:65] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-06 10:54:11,878 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_橙联仓库，执行通过
2022-09-06 10:54:12,779 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_橙联仓库，执行通过
2022-09-06 10:56:24,216 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_橙联仓库，执行通过
2022-09-06 10:56:24,854 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_橙联仓库，执行通过
2022-09-06 10:58:50,258 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-06 10:58:50,967 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-06 10:58:52,393 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-06 10:58:53,654 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-06 10:58:58,630 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-06 10:58:59,668 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-06 10:59:01,392 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_橙联仓库，执行通过
2022-09-06 10:59:02,021 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_橙联仓库，执行通过
2022-09-06 10:59:27,660 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_品晟仓库，执行通过
2022-09-06 10:59:28,231 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_品晟仓库，执行通过
2022-09-06 10:59:29,256 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_风雷仓库，执行通过
2022-09-06 10:59:30,179 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_风雷仓库，执行通过
2022-09-06 10:59:34,978 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_4px仓库，执行通过
2022-09-06 10:59:36,258 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_4px仓库，执行通过
2022-09-06 10:59:37,858 - [test_02order_upload.py-->line:70] - INFO: 用例：上传订单_橙联仓库，执行通过
2022-09-06 10:59:38,512 - [test_02order_upload.py-->line:70] - INFO: 用例：取消出库单_橙联仓库，执行通过
2022-09-06 14:30:28,021 - [test_01ordercome.py-->line:260] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 14:30:28,021 - [test_01ordercome.py-->line:261] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((112 - 110))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 249, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_sku_frozen_num1 - pre_sku_frozen_num1)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((112 - 110))
2022-09-06 14:30:41,792 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-06 14:30:55,982 - [test_01ordercome.py-->line:260] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 14:30:55,983 - [test_01ordercome.py-->line:261] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((298 - 296))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 250, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((298 - 296))
2022-09-06 14:33:51,765 - [test_01ordercome.py-->line:260] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 14:33:51,765 - [test_01ordercome.py-->line:261] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((302 - 300))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 250, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((302 - 300))
2022-09-06 14:40:26,902 - [test_01ordercome.py-->line:261] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 14:40:26,902 - [test_01ordercome.py-->line:262] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((304 - 302))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 251, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((304 - 302))
2022-09-06 14:43:18,659 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-06 14:54:11,434 - [test_01ordercome.py-->line:262] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 14:54:11,435 - [test_01ordercome.py-->line:263] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((318 - 316))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 252, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((318 - 316))
2022-09-06 15:02:14,171 - [test_01ordercome.py-->line:262] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 15:02:14,856 - [test_01ordercome.py-->line:263] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((136 - 134))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 251, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_sku_frozen_num1 - pre_sku_frozen_num1)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((136 - 134))
2022-09-06 15:05:19,045 - [test_01ordercome.py-->line:262] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 15:05:19,046 - [test_01ordercome.py-->line:263] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((322 - 320))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 252, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((322 - 320))
2022-09-06 15:48:50,412 - [test_01ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 15:51:35,486 - [test_01ordercome.py-->line:262] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 15:51:35,488 - [test_01ordercome.py-->line:263] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((334 - 332))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 252, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((334 - 332))
2022-09-06 16:26:20,775 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-06 16:27:21,208 - [test_01ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:28:22,737 - [test_01ordercome.py-->line:262] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 16:28:22,738 - [test_01ordercome.py-->line:263] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((345 - 343))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 252, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((345 - 343))
2022-09-06 16:29:19,077 - [test_01ordercome.py-->line:268] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:32:52,316 - [test_01ordercome.py-->line:263] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 16:32:52,316 - [test_01ordercome.py-->line:264] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((349 - 347))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 253, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((349 - 347))
2022-09-06 16:34:07,531 - [test_01ordercome.py-->line:269] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:34:23,444 - [test_01ordercome.py-->line:263] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 16:34:23,445 - [test_01ordercome.py-->line:264] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((353 - 351))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 253, in test_more_stock
    assert Decimal(CaseDate.goods_num2) == Decimal(end_sku_frozen_num2 - pre_sku_frozen_num2)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num2
 +  and   Decimal('2') = Decimal((353 - 351))
2022-09-06 16:35:19,362 - [test_01ordercome.py-->line:263] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 16:35:19,363 - [test_01ordercome.py-->line:264] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((171 - 169))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 252, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_sku_frozen_num1 - pre_sku_frozen_num1)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((171 - 169))
2022-09-06 16:36:07,483 - [test_01ordercome.py-->line:263] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 16:36:07,484 - [test_01ordercome.py-->line:264] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((173 - 171))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 252, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_sku_frozen_num1 - pre_sku_frozen_num1)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((173 - 171))
2022-09-06 16:38:58,416 - [test_01ordercome.py-->line:263] - ERROR: 用例：创建多个商品订单锁定库存，执行未通过
2022-09-06 16:38:58,416 - [test_01ordercome.py-->line:264] - ERROR: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((175 - 173))
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_01ordercome.py", line 252, in test_more_stock
    assert Decimal(CaseDate.goods_num1) == Decimal(end_sku_frozen_num1 - pre_sku_frozen_num1)
AssertionError: assert Decimal('1') == Decimal('2')
 +  where Decimal('1') = Decimal(1)
 +    where 1 = CaseDate.goods_num1
 +  and   Decimal('2') = Decimal((175 - 173))
2022-09-06 16:41:36,789 - [test_01ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:43:06,554 - [test_01ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:44:43,930 - [test_01ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:45:45,054 - [test_01ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:46:43,709 - [test_01ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 16:47:19,287 - [test_01ordercome.py-->line:122] - INFO: 用例：创建单个商品订单成功锁定库存，执行通过
2022-09-06 16:47:24,235 - [test_01ordercome.py-->line:271] - INFO: 用例：创建多个商品订单锁定库存，执行通过
2022-09-06 17:45:32,245 - [test_02order_upload.py-->line:72] - ERROR: 用例：上传订单_风雷仓库，执行未通过
2022-09-06 17:45:32,246 - [test_02order_upload.py-->line:73] - ERROR: {'code': 200, 'message': 'success'} items not in {'timestamp': '2022-09-06T09:45:32.219+0000', 'path': '/open-logistics-service/api-thunderexService/createDeliveryOrder', 'status': 503, 'error': 'Service Unavailable', 'message': 'Unable to find instance for open-logistics-service', 'requestId': 'c838bd9b'}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_02order_upload.py", line 68, in test_sc_order
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/common/basefunc.py", line 20, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 200, 'message': 'success'} items not in {'timestamp': '2022-09-06T09:45:32.219+0000', 'path': '/open-logistics-service/api-thunderexService/createDeliveryOrder', 'status': 503, 'error': 'Service Unavailable', 'message': 'Unable to find instance for open-logistics-service', 'requestId': 'c838bd9b'}
2022-09-06 17:47:21,119 - [test_02order_upload.py-->line:72] - ERROR: 用例：上传订单_风雷仓库，执行未通过
2022-09-06 17:47:21,119 - [test_02order_upload.py-->line:73] - ERROR: {'code': 200, 'message': 'success'} items not in {'timestamp': '2022-09-06T09:47:21.193+0000', 'path': '/open-logistics-service/api-thunderexService/createDeliveryOrder', 'status': 503, 'error': 'Service Unavailable', 'message': 'Unable to find instance for open-logistics-service', 'requestId': 'a8d6b3bb'}
Traceback (most recent call last):
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/testcases/test_02order_upload.py", line 68, in test_sc_order
    self.bf.assert_dict_item(expected, res)
  File "/Users/sunmin/PycharmProjects/vevor-Auto/sem_inventory/common/basefunc.py", line 20, in assert_dict_item
    raise AssertionError("{} items not in {}".format(dic1, dic2))
AssertionError: {'code': 200, 'message': 'success'} items not in {'timestamp': '2022-09-06T09:47:21.193+0000', 'path': '/open-logistics-service/api-thunderexService/createDeliveryOrder', 'status': 503, 'error': 'Service Unavailable', 'message': 'Unable to find instance for open-logistics-service', 'requestId': 'a8d6b3bb'}
